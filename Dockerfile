# Stage 1: Dependencies
FROM node:20-alpine AS deps
WORKDIR /app
COPY package*.json ./
RUN npm install --force

# Stage 2: Builder
FROM node:20-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set default environment variables for build
ARG NEXT_PUBLIC_PINECONE_API_KEY
ARG PINECONE_API_KEY
ARG DATABASE_URL
ARG NEXT_PUBLIC_AUTH_GITHUB_ID
ARG NEXT_PUBLIC_AUTH_GITHUB_SECRET
ARG AUTH_SECRET
ARG AWS_REGION
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_S3_BUCKET_NAME
ARG NEXT_PUBLIC_PINECONE_ENVIRONMENT
ARG NEXT_PUBLIC_SOCKET_URL
ARG NEXT_PUBLIC_STREAM_API_KEY
ARG STREAM_SECRET
ARG EMAIL_PASSWORD
ARG GITHUB_TOKEN
ARG HUGGINGFACE_API_TOKEN
ARG GROQ_API_KEY
ARG GOOGLE_GENERATIVE_AI_API_KEY
ARG NEXT_PUBLIC_PROJECT_ID=missing-project-id

ENV NEXT_PUBLIC_PINECONE_API_KEY=$NEXT_PUBLIC_PINECONE_API_KEY
ENV PINECONE_API_KEY=$PINECONE_API_KEY
ENV DATABASE_URL=$DATABASE_URL
ENV NEXT_PUBLIC_AUTH_GITHUB_ID=$NEXT_PUBLIC_AUTH_GITHUB_ID
ENV NEXT_PUBLIC_AUTH_GITHUB_SECRET=$NEXT_PUBLIC_AUTH_GITHUB_SECRET
ENV AUTH_SECRET=$AUTH_SECRET
ENV AWS_REGION=$AWS_REGION
ENV AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
ENV AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
ENV AWS_S3_BUCKET_NAME=$AWS_S3_BUCKET_NAME
ENV NEXT_PUBLIC_PINECONE_ENVIRONMENT=$NEXT_PUBLIC_PINECONE_ENVIRONMENT
ENV NEXT_PUBLIC_SOCKET_URL=$NEXT_PUBLIC_SOCKET_URL
ENV NEXT_PUBLIC_STREAM_API_KEY=$NEXT_PUBLIC_STREAM_API_KEY
ENV STREAM_SECRET=$STREAM_SECRET
ENV EMAIL_PASSWORD=$EMAIL_PASSWORD
ENV GITHUB_TOKEN=$GITHUB_TOKEN
ENV HUGGINGFACE_API_TOKEN=$HUGGINGFACE_API_TOKEN
ENV GROQ_API_KEY=$GROQ_API_KEY
ENV GOOGLE_GENERATIVE_AI_API_KEY=$GOOGLE_GENERATIVE_AI_API_KEY
ENV NEXT_PUBLIC_PROJECT_ID=$NEXT_PUBLIC_PROJECT_ID

# Build the application
RUN npm run build

# Stage 3: Production
FROM node:20-alpine AS production
WORKDIR /app
ENV NODE_ENV=production
ENV PORT=3000
EXPOSE 3000

# Create non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Set ownership of /app directory
RUN chown -R appuser:appgroup /app

# Copy necessary files
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public

# Set ownership of copied files
RUN chown -R appuser:appgroup ./

# Switch to non-root user
USER appuser

# Install production dependencies only
RUN npm install --force

# Add health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

# Start the application
CMD ["npm", "start"]